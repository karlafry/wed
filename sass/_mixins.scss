/**
 * Reusable mixins.
 */

/*From https://gist.github.com/adamstac/5048881*/
@mixin font-smoothing($value: antialiased) {
    @if $value == antialiased {
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    } @else {
        -webkit-font-smoothing: subpixel-antialiased;
        -moz-osx-font-smoothing: auto;
    }
}

@mixin x-border-radius($radius: 50px) {
    @include border-radius($radius);
    background-clip: padding-box; /*Stops background color from leaking outside the border.*/
}

@mixin aspect-ratio-img($width,$height) {
    position: relative;
    padding-bottom: ($height / $width) * 100%;
    height: 0;
    overflow: hidden;

    img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
    }
}

@mixin insert-icon($where, $content, $font-size: null, $color: null) {
    &:#{$where} {
        @include font-smoothing;
        font-family: "FontAwesome";
        font-size: if($font-size, $font-size, $base-font-size);
        font-weight: normal;
        content: $content;

        @if $color {
            color: $color;
        }

        $spacing: 10px;

        @if $where == before {
            margin-right: $spacing;
        } @else {
            margin-left: $spacing;
        }
    }
}

@mixin icon-before($content, $font-size: null, $color: null) {
    @include insert-icon('before', $content, $font-size, $color);
}

@mixin icon-after($content, $font-size: null, $color: null) {
    @include insert-icon('after', $content, $font-size, $color);
}

@mixin input-style {
    position: relative;
    background: $white;
    width: 100%;
    font-family: $header-font-family;
    font-size: $epsilon;
    color: $copy;
    padding: 6px;
    border: none;
    border-bottom: 2px solid;
    outline: none;
    border-radius: 0;
    @include rem(margin-bottom, rhythm(0.5));
    @include transition(all 0.3s);
    @include font-smoothing;
    @include appearance(none);

    &:focus {
        outline: 0;
    }

    @include media("<=phone") {
        padding: 4px;
        font-size: 16px;
        @include rem(margin-bottom, rhythm(0.25));

    }
}

@mixin menu-icon {
    &:before {
        position: absolute;
        content: '';
        display: block;
        background: $white;
        top: 11px;
        left: 0;
        width: 22px;
        height: 2px;
        @include box-shadow(0 16px 0 0 $white);
        @include transition(.2s cubic-bezier(0.71, 1.7, .77, 1.24));
    }

    &:after {
        position: absolute;
        content: '';
        display: block;
        background: $white;
        top: 19px;
        left: 0;
        width: 16px;
        height: 2px;
        @include transition(.2s cubic-bezier(0.71, 1.7, .77, 1.24));
    }
}

/* Vertical Rhythm : establish-baseline - http://compass-style.org/reference/compass/typography/vertical_rhythm/ */
@mixin establish-baseline($font-size: $base-font-size) {
    $relative-size: 100% * $font-size / $browser-default-font-size;

    @if support-legacy-browser(ie, "6") and not $relative-font-sizing {
        // IE 6 refuses to resize fonts set in pixels and it weirdly resizes fonts
        // whose root is set in ems. So we set the root font size in percentages of
        // the default font size, even if we are using absolute sizes elsewhere.

        * html {
            font-size: $relative-size;
        }
    }

    html {
        font-size: if($relative-font-sizing, $relative-size, $font-size);
        // Webkit has a bug that prevents line-height being set in rem on ;
        // To work around this and simplify output, we can set initial line-height
        // in ems for all relative rhythm units, even when $rhythm-unit is `rem`.

        @if $relative-font-sizing {
            line-height: convert-length($base-line-height, em);
        } @else {
            line-height: round($base-line-height);
        }
    }
}

/* Vertical Rhythm : adjust-font-size - http://compass-style.org/reference/compass/typography/vertical_rhythm/ */
@mixin adjust-font-size-to($to-size, $lines: auto, $from-size: $base-font-size) {
    $to-size: convert-length($to-size, px, $from-size);

    @if $lines == auto {
        $lines: lines-for-font-size($to-size);
    }

    @include output-rhythm(font-size, convert-length($to-size, $rhythm-unit, $from-size));
    @include adjust-leading-to($lines, $to-size);
}

/* Vertical Rhythm : margin-trailer - http://compass-style.org/reference/compass/typography/vertical_rhythm/ */
@mixin margin-trailer($lines: 0.625, $font-size: $base-font-size) {
    @include output-rhythm(margin-bottom, rhythm($lines, $font-size));
}